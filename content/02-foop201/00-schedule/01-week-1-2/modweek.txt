Title: FOOP201 Lesson
----
Description: Revision, Classes, XAML, Random Class

----
Date: 2013-9-10

----
Tags: XAML, layout, class

----
Text: 
###Core Objective
This sprint is all about re-establishing your coding practice, revisiting concepts from the previous modules and ironing out any issues with new software. We will also introduce the notion of Classes as the basic building blocks in object-oriented programming.

Bob Tabor, owner of (link:http://www.learnvisualstudio.net/ text:Learnvisualstudio.net) provides a very comprehensive (link: https://channel9.msdn.com/Series/C-Fundamentals-for-Absolute-Beginners text:set of videos) courtesy of Microsoft which cover everything we will do this term and next. It is a prime resource for all our work. Full (link:http://media.ch9.ms/csharpfundamentals/code/C9CS_Code.zip text: source code) is provided to his worked examples.
Microsoft Virtual Academy [C# Fundamentals](http://www.microsoftvirtualacademy.com/training-courses/c-fundamentals-for-absolute-beginners) is a similar, excellent video resource.

###Introducing WPF
Windows Presentation Foundation (WPF), part of .NET Framework 4.0, builds the next-generation of Windows user experiences. It supports UI, media, documents, hardware acceleration, vector graphics, scalability to different form factors, interactive data visualization, and superior content readability. It is a client-side development library (not web). MS Expression Blend supports the development of such rich-client applications.

[Walkthrough](https://msdn.microsoft.com/en-us/library/vstudio/ms752299%28v=vs.100%29.aspx): Getting Started with WPF is a step-by-step walkthrough of some of the key features of WPF.

[WPF Tutorial.net](http://www.wpftutorial.net/Home.html) provides a complete but gentle set of examples of how to code with the WPF library.

We'll focus initially on how to build a user interface by assembling basic interface controls (like buttons etc.) on screen. We'll arrange these controls using layout panels (e.g. stackpanel, dockpanel) much like tables in HTML or CSS.

Layout Panels provide a comprehensive, highly customised means of laying out controls in a Window in WPF. (link:http://blogs.southworks.net/ejadib text:Ezequiel Jadib) presents a good (link:http://blogs.southworks.net/ejadib/2007/12/10/layout-in-windows-presentation-foundation-wpf/ text:description) of the various panels: StackPanel, DockPanel, Grid, UniformGrid, WrapPanel. There are also useful links to more detail on MSDN.

###Classes - building OO applications
* [OO Development 4 - Object Concepts](http://www.slideshare.net/randyconnolly/oo-development-4-object-concepts "OO Development 4 - Object Concepts") - more presentations from [Randy Connolly](http://www.slideshare.net/randyconnolly)
* Introduction to Classes ([dotnetperls.com](http://www.dotnetperls.com/property))
* Constructor initialiser and using _base_ keyword ([dotnetperls.com](http://www.dotnetperls.com/this-constructor))
* C#.Net Tutorials - [Introduction to Classes](http://csharp.net-tutorials.com/classes/introduction/)
* Introduction to [Classes](http://www.csharp-station.com/Tutorials/Lesson07.aspx) (CSharp Station)

###Learning Git
Git is a version control mechanism. Read me about it in my [blog post](/blog/git) and we will begin using it in class from Day 1.
###Working with Random Class
The **Random** class is quite useful to many of our early practices, allowing us to introduce some randomness to games etc. It is also a relatively easy class to master. Read more about it (link:http://msdn.microsoft.com/en-us/library/system.random.aspx text:here).

----
practices:
####[Hello World](http://itsligo.github.io/helloworld)
####[Reverse Number](http://itsligo.github.io/reversenumber)
####[Join Words](http://itsligo.github.io/joinwords/)
####[Boxer](http://itsligo.github.io/boxer)
####[Simple Student Results](http://itsligo.github.io/SimpleStudentResults)
####[Student/Form (Classes)](http://itsligo.github.io/studentassessresults)
----
exer:
http://itsligo.github.io/helloworld,http://itsligo.github.io/reversenumber,http://itsligo.github.io/joinwords,http://itsligo.github.io/boxer,http://itsligo.github.io/SimpleStudentResults,http://itsligo.github.io/studentassessresults