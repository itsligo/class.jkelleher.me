Title: CA Alt

----

Description: Heavily styled lisbox (Solar System)

----
Session: Semester 5 (2013-14)
----

Text:
This assessment tests your  understanding of the following concepts/techniques:

*   binding to a object collection
*   employing automatic updating of bound control to changes in source data
*   create and apply data template
*   converting bound data to a different format
*   using the Resources section of the XAML file

Task:

1.  Create a suitable class to hold the data shown opposite: Planet name, Orbit  (in Astronomical Units, or AU), and brief description (feel free to shorten  this) and an Image. And yes, I know the Sun is a star, not a planet, but that's  the least of your troubles!
You'll find a collection of images (link:images.zip text:here).
2.  Create a suitable collection of such **Planets**. Ensure your choice of  collection class provides for the requirements of step 4 &amp; 5 below.
3.  Display a window with a listbox similar to that shown opposite, save for the  differences mentioned in the next step. Ensure that any Data Templates you  create are contained in the **Resources** section of the XAML file for that  Window.
Further ensure that the resources are housed in a separate **ResourceDictionary**.
4.  Add a **Button** as shown which when clicked will add a single new  **Planet** to the collection you created in step 2. If clicked again, it  will just do the same; there is no need for it to create different **Planet **objects each time. Your choice of collection in Step 2 should be such that  the bound listbox will automatically display the new **Planet** without  your manually adding it to that listbox's **Items** collection or similar coding.
5.  Add a checkbox labelled 'Sort by AU' which when selected, sorts the **Planet**s in the listbox in ascending order of AU. **Note**: this requirement is not shown in the screenshot.
6.  Add a textbox whose contents will be used to filter the displayed **Planet**s by name. **Note:** this is not shown in the screenshot above.
There are several aspects to this exercise, all of which are mutually  exclusive so not knowing one step should not hinder your doing the other  steps.

If you find you can't code a particular step but know what is involved, feel  free to document your understanding in the code. For example, use <!-- and  --> to delineate any comments in your XAML (// to be used in C# code).

You will likely be called to a brief interview to discuss your submitted work. Failure to attend for this interview will result in no grade being given to this CA. This is to ensure against plagiarism.

#### Marking Scheme

*   Create classes and collections                          (15 marks)
*   Design and implement data template                      (25 marks)
*   Layout of controls                                      (10 marks)
*   Converting of bound data to appropriate format          (10 marks)
*   Sorting/filtering of data                               (20 marks)
*   Creating and managing recources in XAML file            (10 marks)
*   Using appropriate classes to support automatic updating (10 marks)

<script src="http://form.jotformpro.com/jsform/20714837170956" type="text/javascript"></script>
----