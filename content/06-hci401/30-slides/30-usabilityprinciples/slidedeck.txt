title:Usability Principles/Heuristics

----
name: usabilityprinciples

----
slides:class: center, middle
# Usability Principles
---
class: left
layout: true
name: bulletSlide
---
## Defining Usability & its place
.img[![Usability Principles](/content/06-hci401/30-slides/30-usabilityprinciples/Usability-Diagram.gif)]
---
##Five Usability Attributes
* Learnability: ease of learning for novice users. 
* Efficiency: steady-state performance of expert users. 
* Memorability: ease of using system intermittently for casual users. 
* Errors: error rate for minor and catastrophic errors. 
* Subjective Satisfaction: how pleasant system is to use. 
---
##Learning Curves
.img[![Learning Curve](/content/06-hci401/30-slides/30-usabilityprinciples/learning_curve.png)]
---
##Learning Curves
* Some systems are designed to focus on learnability. 
* Others emphasise efficiency for proficient users. 
* Some support both ease of learning and an “expert mode”
* Examples?
* Learning curves for hypothetical systems focusing on the novice user (easy to learn, but less efficient to use) and the expert user (harder to learn, but then highly efficient). 
---
##Ways to Measure Usability
* Learnability: pick novice users of system, measure time to perform certain tasks. Distinguish between no/some general computer experience. 
* Efficiency: decide definition of expertise, get sample expert users (difficult), measure time to perform typical tasks. 
* Memorability: get sample casual users (away from system for certain time), measure time to perform typical tasks. 
* Errors: count minor and catastrophic errors made by users while performing some specified task. 
* Satisfaction: ask users' subjective opinion (questionnaire, interview), after trying system for real task
.footnote[Beware users ratings closely related to ‘peak’ difficulty.]
---
###Nielsen's Usability Heuristics (1/4)
* Visibility of system status
    * The system should always keep users informed about what is going on, through appropriate feedback within reasonable time.
* Match between system and the real world
    * The system should speak the users' language, with words, phrases and concepts familiar to the user, rather than system-oriented terms. Follow real-world conventions, making information appear in a natural and logical order.
* User control and freedom
    * Users often choose system functions by mistake and will need a clearly marked "emergency exit" to leave the unwanted state without having to go through an extended dialogue. Support undo and redo.
---
###Nielsen's Usability Heuristics (2/4)
* Consistency and standards
    * Users should not have to wonder whether different words, situations, or actions mean the same thing. Follow platform conventions.
* Error prevention
    * Even better than good error messages is a careful design which prevents a problem from occurring in the first place. Either eliminate error-prone conditions or check for them and present users with a confirmation option before they commit to the action.
---
###Nielsen's Usability Heuristics (3/4)
* Recognition rather than recall
    * Minimize the user's memory load by making objects, actions, and options visible. User should not have to remember information from one part of the dialogue to another. Instructions for use of the system should be visible or easily retrievable.
* Flexibility and efficiency of use
    * Accelerators - unseen by novices - may often speed up the interaction for the expert user such that the system can cater to both inexperienced and experienced users. Allow users to tailor frequent actions.
---
###Nielsen's Usability Heuristics (4/4)
* Aesthetic and minimalist design
    * Dialogues should not contain irrelevant or rarely needed information. Each extra unit of information in a dialogue competes with the relevant units of information and diminishes their relative visibility.
* Help users recognize, diagnose, and recover from errors
    * Error messages should be expressed in plain language (no codes), precisely indicate the problem, and constructively suggest a solution.
* Help and documentation
    * Better if the system can be used without documentation, thought may be necessary to provide help and documentation. Any such information should be easy to search, focused on the user's task, list concrete steps to be carried out, and not be too large.
---
.img[![Learning Curve](/content/06-hci401/30-slides/30-usabilityprinciples/autoexec_sketch.png)]
---
.img[![Learning Curve](/content/06-hci401/30-slides/30-usabilityprinciples/faucet.png)]
---
.img[![Learning Curve](/content/06-hci401/30-slides/30-usabilityprinciples/livewire.png)]
