Title: CA2

----

Description: Out-of-class assignment to create a high-fidelity prototype UI

----
Session: Semester 8 (2014)
----
Alert:
####Feedback CA1 ([Results](https://docs.google.com/spreadsheet/pub?key=0Avax7Tsevzx_dExCNFk0dDJDaERjbERQLU91WWdTb2c&single=true&gid=4&output=html))

I have provided commentary specific to each submission (below) but provide some general observations here also.

**Gov.ie**
Prototype follows clearly from work in CA1. Interactivity with protoytpe is very minimal. There is not a lot of innovation or variety in how tasks are approached (predominantly via search box) - this could be improved significantly by incorporating a form of predictive or auto-prompt search query, particularly since much of the UI redesign is pegged to this form of navigation.
Documentation quite good though page numbers absent. There are lapses in attention to detail with the relatively sparse UI. For example, if fields are not mandatory then this should be communicated to users - similarly, explanation should be given for why certain fields are necessary unless this is very clear. Also, there are many typos which should have been weeded out in proof-reading.
There needs to be greater clarification around how the search mechanism works. For example, on entering a 'keyword', a list of links are presented. It would be better for there to be some body text for each link indicating why it has been selected (Ã  la Google) particularly given how such keywords may be subject to false-positive results.
Overall, the design mechanism (search) employed appears quite perfunctory and could use further elaboration or perhaps another supplementary approach. Also, the overall design concerns itself almost solely with search.

**College Printing Service**
Document should be in PDF format as per directions. Various assets (images etc.) are not properly collated, just left in folders without documentation.
Page numbers missing from otherwise reasonably well presented document.
The interactivity of the prototype is quite rudimentary particularly given the limited nature of the design. Greater flexibility regarding interacting with the protoytpe could be achieved were it developed in html, for example.
The selection of which printer to use is a case in point. This is a pivotal choice and the UI is underwhelming. While it can be presumed that the user's choice of b&w or colour will filter the available printers, this isn't conveyed to the user. Nor is there an attempt to indicate the location of the printer or describe its facilities.
There are also sweeping statements that are not justified or evidenced - "Help documentation can be a little intimidating and hard to reach the exact information that is required".
The filtering and searching feature for previously printed documents is not rendered in the prototype. Other possible improvements would be to indicate what capacity of printing resides in the monetary balance on the account.
A comment I made regarding credit card information and set of fields necessary to validate a card appears to have not been remedied.

**Student Booking System**
Documentation layout lacked structure (and again, page numbers). There is evidence of redesign on foot of feedback and some explanation of the rationale behind the changes.The overall attention to detail in the design is good. The prototyping engine is a good choice and you appear to have made good use of the facilities of the service.
The design of certain pages are under-developed though and the layout of controls is problematic. Some pages appear to expect very hi-res screens while others not. However, overall the design shows a reasonable attempt at fulfilling the task requirements.

**Susi System**
Good well presented report (with page numbers!). Well structured and clearly documented. Use of Sketchflow and Web Forms was welcome though I would question the use of the latter.
Several interesting and well thought-out design artifacts (e.g. flowcharts to show documents). The prototype works well and has more than adequate functionality - some would argue that it exceeds protoytpe-status. Styling is also a welcome feature but perhaps more appropriate to a development effort.
The notification system to assure users is a good feature and plays its part well.

----
Text: 
####Overview

The goal of this assignment is to learn how to build prototypes of user interface ideas using an interactive user interface builder. You will revise your user interface ideas and then use interactive tools to build a prototype of the design.
CA2 is worth 18% of the CA (30%) for HCI402.

####Interface re-Design

Use the results of your low-fi prototype tests to design a revised user interface. Develop new and/or revised scenarios for your tasks by storyboarding your ideas with pen and paper. The tasks that most of you used in the low-fi assignment should be sufficient for this, but some were simple or partial tasks that did not adequately cover your proposed functionality. Make sure to revise those tasks.

####Prototyping

You will use a prototyping tool to create an interactive prototype of your application. For many web applications, you could use html/css to develop your prototype, possible with simple js to animate or add other interactivity. For other applications, generally avoid using high-level langauges. Consider instead Powerpoint or similar to 'fake' interactions - use triggers to imitate buttons, directing users to another slide which reflects the changes the button click introduced.

Your prototype should implement the three scenarios that you developed for your tasks. In addition, the design of the prototype should now start to account for the size, resolution, colours, and other attributes of your target platform. However, the underlying functionality does not have to be fully implemented. For example, applications requiring large databases of information can instead have a sufficient number of hard-coded data points for supporting the three tasks.

You have a relatively short period of time to complete this prototype, so you should focus on showing only what is essential and try to avoid writing code where it is not necessary. You will likely have to make some hard choices!

###Deliverables

####Prototype
Your prototype must be accessible and/or executable by everyone in the class from your website. It must be accompanied by a README document that describes any installation requirements and operating instructions, including any limitations in the implementation. The prototype should ideally be executable without installing any additional software.

####Report
A report (pdf) of no more approx. 6 pages of text.

####Design

**Tasks**
Do the tasks cover the interesting features of the project?
Do the tasks have an appropriate difficulty/complexity specified?
Do the tasks altogether form a compelling story for the project?
**Changes**
Were appropriate changes made to address the important problems discovered?
Are these changes well illustrated with scans and screenshots?
**Transition from low-fi to interactive prototype**
Were the limitations of the low-fi addressed?
Were appropriate constraints from the final target platform considered?
Does the design adequately represent the final target platform?
Were any non-standard interactions described and justified?
**Prototype**
Is the prototype accessible and working?
Can users complete the three tasks with the prototype?
Were appropriate tradeoffs made between functionality and completeness?
Are the limitations and tradeoffs described and justified in the report?
Does the README file summarize these limitations and any other details needed?

**Report**
The report should follow this outline with separate sections for the top-level items, although using more subsections will make it even more readable for us:

* Problem and solution overview (1 paragraph)
* Tasks (1/4 page)
* 3 representative tasks to test your interface (3 levels of difficulty)
* Revised Interface design (1 page + screen dumps)
* Differences as a result of Low-fi testing & why (refer to screen dumps)
* use sketches for screens you may not have implemented
* scenario for 3 tasks
* storyboards of scenarios (annotated screen dumps)
* Prototype overview (~2 pages)
* tools you used
* how the tools helped
* how the tools did not help
* overview of the UI you actually implemented (reference figures from next section)
* what was left out and why
* any wizard of oz techniques that are required to make it work
* Prototype screen dumps (as many as needed)

The work will be graded on the following factors:

* How good were the representative tasks chosen?
* Good coverage?
* Too easy or too hard?
* How good were the user interface ideas presented?
* Novel and creative?
* Appropriate for the supported tasks?
* Follow from the task analysis, low-fi prototype, and other sound reasoning?
* How much functionality was shown?
* Enough to illustrate the representative tasks?
* Give a flavour of the interface?
* Appropriate amount given difficulty of interface ideas

####Marking Scheme
* Presentation 15%
* Elaboration on design 25%
* Execution of prototype 40%
* Design justification 20%

####Submission

Please submit your document as HCI Assign Part X TITLE AB CD EF

where X is the part number and AB, CD, EF are the initials of the group members and TITLE is the working name for the application.

You should zip the necessary prototype files into this single submission.