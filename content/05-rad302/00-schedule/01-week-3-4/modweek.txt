Title: EF & Repository Pattern
----
Description: EF & Repository Pattern

----
Date: 2015-2-18

----
Tags: MVC,ASP.NET

----
Text: 
####In-class work
The exercises opposite explore the following areas in particular:

* consider Ajax operations (using jQuery) and data validation when performing the CRUD operations
* engage EF data migration to support later changes to the data model and push these changes up to the database itself
* develop and deploy Dependency Injection (a form of Inversion of Control container) to enfore separation of concerns between the database and its querying

These topics are clearly commmented and explained in the code provided by the examples opposite. Note that there may be multiple branches within a project so that earlier material is preserved and not 'cluttered' by later more complicated work.

####Database First Approach
Julie [Lerman](http://learnentityframework.com/learnentityframework/), an expert in the framework, presents this gentle, short [introduction](http://msdn.microsoft.com/en-us/data/ff191186) (downloadable video 10min) to _creating your first entity model_.
This video is part of a series which looks in detail (though a a simple level) at the creation and use of an Entity model - all of which can be downloaded for later viewing.
(link: http://msdn.microsoft.com/en-us/data/ff628208 text:Julie Lerman) continues with a [video](http://msdn.microsoft.com/en-us/data/ff628208) on consuming an entity data model. The previous video created an entity model in a class library (a dll file). This separation is best practice and helps to better structure your application. At the end of this video you will have a solution with two projects - one to manage the Entity Model (the class library) and the other to employ the Entity Model. We use LINQ (Language Integrated Querying) to Entities to do this providing a C# language syntax to query the data.

####Sample Database
You'll find a [script](http://msftdbprodsamples.codeplex.com/releases/view/55330) for AdventureWorksLT (note the LT - light version) from Microsoft. You may choose to download the database instead if you find it easier. There are other sample databases (including Northwind) hosted on [Github](https://github.com/itsligo/sampledbs).

####Repository Pattern & Dependency Injection
The Repository pattern ensures that there is separation of concerns between that part of your code that handles the direct data access and that part that constructs the views (controller). Doing this means that you can substitute another repository that (say) provides test data.
Dependency injection ensures that the MVC controllers don't have a dependency on the repositories you create. We use [Ninject](https://www.nuget.org/packages/Ninject.MVC3) to provide this behaviour. Look to the Northwind or College examples opposite.
See [here](http://www.asp.net/mvc/tutorials/getting-started-with-ef-5-using-mvc-4/implementing-the-repository-and-unit-of-work-patterns-in-an-asp-net-mvc-application) for a full walkthrough.
Or look to this [article](http://aspnetguru.com/how-to-use-ninject-in-asp-net-mvc-5-and-web-api-2/) to see how to inject your Repository into the MVC Controllers.

####Video Introducing Repository Pattern
<iframe src="https://media.heanet.ie/player/74bb340fe772de27c967099d5724f136" name="74bb340fe772de27c967099d5724f136" width="640" height="360" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" webkitAllowFullScreen allowFullScreen></iframe>
Also on (link:http://youtu.be/9Vfq1K8Exr0 text:Youtube) for download.

####Useful Extensions to Visual Studio
Some of these may become embedded in VS in future versions but each are individually worth investigating to leverage your productivity in VS.

* Open Command Line ([Mads Kristensen](https://visualstudiogallery.msdn.microsoft.com/4e84e2cf-2d6b-472a-b1e2-b84932511379))
     Opens a command line at the root of the project. Support for all consoles such as CMD, PowerShell, Bash etc
* Web Essentials ([Mads Kristensen](http://vswebessentials.com/))
     Extends Visual Studio with a lot of new features that web developers have been missing for many years. If you ever write CSS, HTML, JavaScript, TypeScript, CoffeeScript or LESS, then you will find many useful features that make your life as a developer easier. There are different versions for different versions of VS. Principle among its features are Zen coding, Markdown editing & preview, CSS hacks.
* Visual Studio Tools for Git ([MS](https://visualstudiogallery.msdn.microsoft.com/abafc7d6-dcaa-40f4-8a5e-d6724bdb980c))
     An extension for Team Explorer to provide source control integration for Git. Enables integration with local Git repositories and provides tools to work with remote repositories. This is included by default in VS2013 onwards.
* Productivity Power Tools 2012 ([MS](https://visualstudiogallery.msdn.microsoft.com/3a96a4dc-ba9c-4589-92c5-640e07332afd))
     A set of extensions to Visual Studio 2012 Professional (and above) which improves developer productivity.
----
practices:
####[Northwind](https://github.com/itsligo/northwind)
<small>Using EF Database First variant, Ajax querying, Bootstrap styling, MailService to handle contact form, Dependency Injection with Repository pattern</small>
####[EFBlogCon](https://github.com/itsligo/ef_cf_con)
<small>Console app showing basic EF Code First setup. Extend using data migrations</small>
####[PractEFBlogCon](https://github.com/itsligo/practEFBlogCon)
<small>In-class build up to EFBlogCon. uses data migration, lazy loading, seeding database</small>
####[College](https://github.com/itsligo/college)
<small>asp.NET follow-on from EFBlogCon. DI branch uses Repository pattern with Dependency Injection from Ninject.</small>
####[College2](https://github.com/itsligo/college2)
<small>Same as above but for older VS2012 installs with lower versions of MVC etc.</small>
####[Ransom Note](https://github.com/itsligo/ransomnote)
<small>Puzzle to write a ransome note from a magazine</small>